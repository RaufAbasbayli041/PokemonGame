// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonGame.Persistance.DB;

#nullable disable

namespace PokemonGame.Persistance.Migrations
{
    [DbContext(typeof(PokemonGameDbContext))]
    [Migration("20250722193253_sdfewredf")]
    partial class sdfewredf
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryPokemon", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonsId")
                        .HasColumnType("int");

                    b.HasKey("CategoriesId", "PokemonsId");

                    b.HasIndex("PokemonsId");

                    b.ToTable("PokemonCategories", (string)null);
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BattleDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GymId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("LoserId")
                        .HasColumnType("int");

                    b.Property<int>("Trainer1Id")
                        .HasColumnType("int");

                    b.Property<int>("Trainer2Id")
                        .HasColumnType("int");

                    b.Property<int?>("TrainerId")
                        .HasColumnType("int");

                    b.Property<int?>("TrainerPokemonPokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("TrainerPokemonTrainerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WinnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GymId");

                    b.HasIndex("LoserId");

                    b.HasIndex("Trainer1Id");

                    b.HasIndex("Trainer2Id");

                    b.HasIndex("TrainerId");

                    b.HasIndex("WinnerId");

                    b.HasIndex("TrainerPokemonTrainerId", "TrainerPokemonPokemonId");

                    b.ToTable("Battles");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.Gym", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LeaderId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId")
                        .IsUnique();

                    b.HasIndex("LocationId");

                    b.ToTable("Gyms");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("HP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(100);

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.Trainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Trainers");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.TrainerPokemon", b =>
                {
                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CaughtAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentHP")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TrainerId", "PokemonId");

                    b.HasIndex("PokemonId");

                    b.ToTable("TrainerPokemons");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.WildBattle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BattleDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.Property<int?>("TrainerPokemonPokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("TrainerPokemonTrainerId")
                        .HasColumnType("int");

                    b.Property<bool?>("TrainerWin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("WildPokemonId")
                        .HasColumnType("int");

                    b.Property<int?>("WildPokemonId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("TrainerId");

                    b.HasIndex("WildPokemonId");

                    b.HasIndex("WildPokemonId1");

                    b.HasIndex("TrainerPokemonTrainerId", "TrainerPokemonPokemonId");

                    b.ToTable("WildBattle");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.WildPokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AppearedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("HP")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("PokemonId")
                        .IsUnique();

                    b.ToTable("WildPokemons");
                });

            modelBuilder.Entity("PokemonSkill", b =>
                {
                    b.Property<int>("PokemonsId")
                        .HasColumnType("int");

                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.HasKey("PokemonsId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("PokemonSkills", (string)null);
                });

            modelBuilder.Entity("CategoryPokemon", b =>
                {
                    b.HasOne("PokemonGame_Domain.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonGame_Domain.Entities.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("PokemonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.Battle", b =>
                {
                    b.HasOne("PokemonGame_Domain.Entities.Gym", "Gym")
                        .WithMany("Battles")
                        .HasForeignKey("GymId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PokemonGame_Domain.Entities.Trainer", "Loser")
                        .WithMany()
                        .HasForeignKey("LoserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PokemonGame_Domain.Entities.Trainer", "Trainer1")
                        .WithMany()
                        .HasForeignKey("Trainer1Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PokemonGame_Domain.Entities.Trainer", "Trainer2")
                        .WithMany()
                        .HasForeignKey("Trainer2Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PokemonGame_Domain.Entities.Trainer", null)
                        .WithMany("Battles")
                        .HasForeignKey("TrainerId");

                    b.HasOne("PokemonGame_Domain.Entities.Trainer", "Winner")
                        .WithMany()
                        .HasForeignKey("WinnerId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("PokemonGame_Domain.Entities.TrainerPokemon", null)
                        .WithMany("Battles")
                        .HasForeignKey("TrainerPokemonTrainerId", "TrainerPokemonPokemonId");

                    b.Navigation("Gym");

                    b.Navigation("Loser");

                    b.Navigation("Trainer1");

                    b.Navigation("Trainer2");

                    b.Navigation("Winner");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.Gym", b =>
                {
                    b.HasOne("PokemonGame_Domain.Entities.Trainer", "Leader")
                        .WithOne()
                        .HasForeignKey("PokemonGame_Domain.Entities.Gym", "LeaderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PokemonGame_Domain.Entities.Location", "Location")
                        .WithMany("Gyms")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Leader");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.TrainerPokemon", b =>
                {
                    b.HasOne("PokemonGame_Domain.Entities.Pokemon", "Pokemon")
                        .WithMany()
                        .HasForeignKey("PokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonGame_Domain.Entities.Trainer", "Trainer")
                        .WithMany("Pokemons")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pokemon");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.WildBattle", b =>
                {
                    b.HasOne("PokemonGame_Domain.Entities.Location", "Location")
                        .WithMany("WildBattles")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PokemonGame_Domain.Entities.Trainer", "Trainer")
                        .WithMany("WildBattles")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PokemonGame_Domain.Entities.WildPokemon", "WildPokemon")
                        .WithMany()
                        .HasForeignKey("WildPokemonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PokemonGame_Domain.Entities.WildPokemon", null)
                        .WithMany("WildBattles")
                        .HasForeignKey("WildPokemonId1");

                    b.HasOne("PokemonGame_Domain.Entities.TrainerPokemon", null)
                        .WithMany("WildBattles")
                        .HasForeignKey("TrainerPokemonTrainerId", "TrainerPokemonPokemonId");

                    b.Navigation("Location");

                    b.Navigation("Trainer");

                    b.Navigation("WildPokemon");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.WildPokemon", b =>
                {
                    b.HasOne("PokemonGame_Domain.Entities.Location", "Location")
                        .WithMany("WildPokemons")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PokemonGame_Domain.Entities.Pokemon", "Pokemon")
                        .WithOne()
                        .HasForeignKey("PokemonGame_Domain.Entities.WildPokemon", "PokemonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("PokemonSkill", b =>
                {
                    b.HasOne("PokemonGame_Domain.Entities.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("PokemonsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PokemonGame_Domain.Entities.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.Gym", b =>
                {
                    b.Navigation("Battles");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.Location", b =>
                {
                    b.Navigation("Gyms");

                    b.Navigation("WildBattles");

                    b.Navigation("WildPokemons");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.Trainer", b =>
                {
                    b.Navigation("Battles");

                    b.Navigation("Pokemons");

                    b.Navigation("WildBattles");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.TrainerPokemon", b =>
                {
                    b.Navigation("Battles");

                    b.Navigation("WildBattles");
                });

            modelBuilder.Entity("PokemonGame_Domain.Entities.WildPokemon", b =>
                {
                    b.Navigation("WildBattles");
                });
#pragma warning restore 612, 618
        }
    }
}
